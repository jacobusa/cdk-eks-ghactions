---
apiVersion: v1
kind: Secret
metadata:
  name: flask-secret
type: Opaque
data:
  OWM_API_KEY: ZDQ1MGI5MGRiZTkyOGIyYzNmNDI3MzVkZGFjOWM2Yjg=
  # OWM_API_KEY: d450b90dbe928b2c3f42735ddac9c6b8
  # OWM_API_KEY: <OWM_API_KEY>
  POSTGRES_DATABASE_URI: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBvc3RncmVzLXNlcnZpY2UuZGVmYXVsdC5zdmMuY2x1c3Rlci5sb2NhbDo1NDMyL3Bvc3RncmVz # postgresql://postgres:postgres@postgres-service.default.svc.cluster.local:5432/postgres

  # POSTGRES_DATABASE_URI: cG9zdGdyZXNxbDovL3Bvc3RncmVzOnBvc3RncmVzQHBvc3RncmVzLXNlcnZpY2U6NTQzMi93ZWF0aGVyCg==
  # POSTGRES_DATABASE_URI: postgresql://postgres:postgres@postgres:5432/postgres
  # POSTGRES_DATABASE_URI: <POSTGRES_DATABASE_URI>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  # labels:
  #   app: weather-api
  name: flask-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask
  template:
    metadata:
      labels:
        app: flask
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io.scheme: "http"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
        - name: flask
          image: jbadenhorst/weather-api:latest
          ports:
            - containerPort: 8080
          env:
            - name: OWM_API_KEY
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: OWM_API_KEY
            - name: POSTGRES_DATABASE_URI
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: POSTGRES_DATABASE_URI
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  # labels:
  #   app: weather-api
  name: flask-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: flask
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flask-ingress
  # annotations:
  #   kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: ingress-nginx
  rules:
    - host: justadomain.xyz
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: flask-service
                port:
                  number: 8080
